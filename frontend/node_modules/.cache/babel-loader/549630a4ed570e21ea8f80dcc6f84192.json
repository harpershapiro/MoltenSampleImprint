{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harpe\\\\Documents\\\\molten-sample-imprint\\\\frontend\\\\src\\\\components\\\\authform.component.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nconst BACK_PORT = 4000;\nexport default class AuthForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      type: this.props.type\n    };\n    this.toggleMode = this.toggleMode.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleMode() {\n    if (this.state.type === 'login') {\n      this.setState({\n        type: 'signup'\n      });\n      this.props.history.push('/signup');\n    } else {\n      this.setState({\n        type: 'login'\n      });\n      this.props.history.push('/login');\n    }\n  }\n\n  handleSubmit(ev) {\n    //api will handle hashing\n    ev.preventDefault(); //FORMATTED FOR AUTH API CALL ONLY\n\n    const userSubmission = {\n      username: this.state.username,\n      password: this.state.password\n    }; //FORMATTED FOR loginUser() METHOD ONLY\n\n    const userToLogin = {\n      user_name: this.state.username,\n      user_roles: ['user'] //default\n\n    }; //(need to combine these schemes)\n\n    if (this.state.type === 'signup') {\n      //add to db\n      axios.post(`http://localhost:${BACK_PORT}/molten/users/sign-up`, userSubmission).then(res => {\n        //const parsedRes = JSON.parse(res);\n        //console.log(JSON.stringify(res));\n        console.log(`Signed up ${res.data.response.user_name}`);\n        this.props.loginUser(userToLogin);\n        this.props.history.push('/'); //need to be async??\n      });\n    } else {\n      console.log(\"about to login user\");\n      axios.post(`http://localhost:${BACK_PORT}/molten/users/sign-in`, userSubmission).then(res => {\n        this.props.loginUser(userToLogin);\n        this.props.history.push('/'); //need to be async??\n      });\n    }\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      className: \"mb-1 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      onChange: this.onChangeUsername,\n      value: this.state.username,\n      className: \"form-control rounded-0\",\n      required: true,\n      minLength: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      className: \"mb-1 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      id: \"password\",\n      onChange: this.onChangePassword,\n      value: this.state.password,\n      className: \"form-control rounded-0\",\n      required: true,\n      minLength: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: this.state.type === 'signup' ? \"Sign Up\" : \"Login\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, this.state.type === 'signup' ? \"(Login Instead)\" : \"(Sign Up Instead)\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/harpe/Documents/molten-sample-imprint/frontend/src/components/authform.component.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","axios","BACK_PORT","AuthForm","constructor","props","state","username","password","type","toggleMode","bind","onChangeUsername","onChangePassword","handleSubmit","setState","history","push","ev","preventDefault","userSubmission","userToLogin","user_name","user_roles","post","then","res","console","log","data","response","loginUser","e","target","value","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nconst BACK_PORT = 4000;\r\n\r\n\r\nexport default class AuthForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n         this.state = {\r\n            username: '',\r\n            password: '',\r\n            type: this.props.type\r\n        }\r\n\r\n        this.toggleMode = this.toggleMode.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\r\n\r\n    }\r\n\r\n    toggleMode(){\r\n        if(this.state.type==='login'){\r\n            this.setState({\r\n                type: 'signup'\r\n            })\r\n            this.props.history.push('/signup');\r\n        } else {\r\n            this.setState({\r\n                type: 'login'\r\n            })\r\n            this.props.history.push('/login');\r\n        }\r\n    }\r\n\r\n\r\n    handleSubmit(ev){\r\n        //api will handle hashing\r\n        ev.preventDefault();\r\n        //FORMATTED FOR AUTH API CALL ONLY\r\n        const userSubmission= {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        //FORMATTED FOR loginUser() METHOD ONLY\r\n        const userToLogin = {\r\n            user_name: this.state.username,\r\n            user_roles: ['user'] //default\r\n        }\r\n        //(need to combine these schemes)\r\n\r\n        if(this.state.type==='signup'){\r\n\r\n\r\n            //add to db\r\n            axios.post(`http://localhost:${BACK_PORT}/molten/users/sign-up`,userSubmission)\r\n            .then((res)=>{\r\n                //const parsedRes = JSON.parse(res);\r\n                //console.log(JSON.stringify(res));\r\n                console.log(`Signed up ${res.data.response.user_name}`);\r\n\r\n                this.props.loginUser(userToLogin);\r\n                this.props.history.push('/'); //need to be async??\r\n            });\r\n        } else {\r\n            console.log(\"about to login user\");\r\n            axios.post(`http://localhost:${BACK_PORT}/molten/users/sign-in`,userSubmission)\r\n            .then((res)=>{\r\n                this.props.loginUser(userToLogin);\r\n                this.props.history.push('/'); //need to be async??\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangePassword(e){\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeUsername(e){\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Router>\r\n            <div>\r\n                <form onSubmit = {this.handleSubmit}>\r\n                    <div className = \"form-group\">\r\n                        <label htmlFor=\"username\" className=\"mb-1 text-muted\">\r\n                                Username\r\n                        </label>\r\n                        <input  type=\"text\" \r\n                                name=\"username\" \r\n                                id=\"username\" \r\n                                onChange={this.onChangeUsername}\r\n                                value={this.state.username} \r\n                                className=\"form-control rounded-0\" \r\n                                required minLength=\"5\" />\r\n                        \r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label htmlFor=\"password\" className=\"mb-1 text-muted\">\r\n                                Password\r\n                        </label>\r\n                        <input  type=\"text\" \r\n                                name=\"password\" \r\n                                id=\"password\" \r\n                                onChange={this.onChangePassword}\r\n                                value={this.state.password} \r\n                                className=\"form-control rounded-0\" \r\n                                required minLength=\"5\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value={this.state.type === 'signup' ? \"Sign Up\" : \"Login\"} className=\"btn btn-primary\"></input>\r\n                    </div>\r\n\t\t\t\t\t\r\n                    <button onClick={this.toggleMode} >{this.state.type === 'signup' ? \"(Login Instead)\" : \"(Sign Up Instead)\"}</button>\r\n\r\n\t\t\t\t\t\t\t\r\n                        \r\n                </form>\r\n            </div>\r\n            </Router>\r\n        )\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}