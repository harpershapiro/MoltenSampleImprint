{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harpe\\\\Documents\\\\molten-sample-imprint\\\\frontend\\\\src\\\\components\\\\post.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { hasRole, isAuth } from \"../auth.js\";\nimport DownloadButton from \"./downloadButton.js\";\nconst BACK_PORT = 4000;\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageUrl: '',\n      packUrl: ''\n    };\n    this.deletePost = this.deletePost.bind(this);\n  }\n\n  hidePost() {//todo: add hidden field in model, make a new page for hidden posts?\n  }\n\n  componentDidMount() {\n    this.fetchImage(this.props.post.post_url.concat('.', this.props.post.img_ext)); //set full pack url\n\n    let fullPackUrl = this.props.post.pack_url.concat('.', this.props.post.pack_ext);\n    this.setState({\n      packUrl: fullPackUrl\n    });\n  }\n\n  fetchImage(urlFromPost) {\n    //const imageName = 'daffycolorado.JPG'\n    const imageName = urlFromPost.split('/').slice(-1)[0];\n    const url = `http://localhost:${BACK_PORT}/molten/files/fetchImage/${imageName}`;\n    axios.get(url, {\n      responseType: 'blob'\n    }).then(res => {\n      //console.log(`ImageData: ${res.data} `)\n      //var file = new File( res.data, \"image\", { type: \"image/jpeg\" } );\n      var localImageUrl = URL.createObjectURL(res.data);\n      console.log(`about to return image tag at ${localImageUrl}`); //return (<img src={imageUrl} />);\n      //return imageUrl; \n\n      this.setState({\n        imageUrl: localImageUrl\n      });\n    });\n  }\n\n  deletePost() {\n    const postId = this.props.post._id; //TODO: CONFIRM WINDOW\n\n    axios.delete(`http://localhost:${BACK_PORT}/molten/posts/delete/${postId}`).then(res => {\n      this.props.postDeleted(postId);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, this.props.post.post_title), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, this.props.post.post_submitter), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, this.props.post.post_desc), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), isAuth(this.props.user) && hasRole(this.props.user, ['admin']) && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.deletePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 83\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(DownloadButton, {\n      fileUrl: this.state.packUrl,\n      fileName: this.props.post.post_title.concat('.', this.props.post.pack_ext),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/harpe/Documents/molten-sample-imprint/frontend/src/components/post.component.js"],"names":["React","Component","axios","hasRole","isAuth","DownloadButton","BACK_PORT","Post","constructor","props","state","imageUrl","packUrl","deletePost","bind","hidePost","componentDidMount","fetchImage","post","post_url","concat","img_ext","fullPackUrl","pack_url","pack_ext","setState","urlFromPost","imageName","split","slice","url","get","responseType","then","res","localImageUrl","URL","createObjectURL","data","console","log","postId","_id","delete","postDeleted","render","post_title","post_submitter","post_desc","user"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {hasRole, isAuth} from \"../auth.js\";\r\nimport DownloadButton from \"./downloadButton.js\";\r\nconst BACK_PORT = 4000;\r\n\r\n\r\nexport default class Post extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={imageUrl: '',\r\n                    packUrl: ''}\r\n\r\n        this.deletePost=this.deletePost.bind(this);\r\n    }\r\n\r\n    hidePost(){\r\n        //todo: add hidden field in model, make a new page for hidden posts?\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchImage(this.props.post.post_url.concat('.',this.props.post.img_ext));\r\n        //set full pack url\r\n        let fullPackUrl = this.props.post.pack_url.concat('.',this.props.post.pack_ext);\r\n        this.setState({packUrl: fullPackUrl});\r\n    }\r\n\r\n    fetchImage(urlFromPost) {\r\n        //const imageName = 'daffycolorado.JPG'\r\n        const imageName = urlFromPost.split('/').slice(-1)[0];\r\n        const url = `http://localhost:${BACK_PORT}/molten/files/fetchImage/${imageName}`\r\n        axios.get(url, {responseType: 'blob'})\r\n        .then(res => {\r\n            //console.log(`ImageData: ${res.data} `)\r\n            //var file = new File( res.data, \"image\", { type: \"image/jpeg\" } );\r\n            var localImageUrl = URL.createObjectURL(res.data);\r\n            console.log(`about to return image tag at ${localImageUrl}` )\r\n            //return (<img src={imageUrl} />);\r\n            //return imageUrl; \r\n            this.setState({imageUrl: localImageUrl});          \r\n        })\r\n    }\r\n\r\n    deletePost(){\r\n        const postId = this.props.post._id;\r\n        //TODO: CONFIRM WINDOW\r\n        axios.delete(`http://localhost:${BACK_PORT}/molten/posts/delete/${postId}`)\r\n            .then((res)=>{\r\n                this.props.postDeleted(postId);\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"jumbotron\">\r\n                <h1>{this.props.post.post_title}</h1>\r\n                <h3>{this.props.post.post_submitter}</h3>\r\n                <p>{this.props.post.post_desc}</p>\r\n                <img src={this.state.imageUrl}></img>\r\n                {isAuth(this.props.user) && hasRole(this.props.user,['admin']) && <button onClick={this.deletePost}>Delete</button>}\r\n                <DownloadButton fileUrl={this.state.packUrl} fileName={this.props.post.post_title.concat('.',this.props.post.pack_ext)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}