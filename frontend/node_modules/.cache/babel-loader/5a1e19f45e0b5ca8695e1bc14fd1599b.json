{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harpe\\\\Documents\\\\molten-sample-imprint\\\\frontend\\\\src\\\\components\\\\submitPage.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { userContext } from \"../userContext.js\";\n\nconst FileType = require('file-type');\n\nconst BACK_PORT = 4000;\nexport default class SubmitPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      didUpload: false,\n      submission_pack_url: '',\n      submission_img_url: '',\n      submission_title: '',\n      submission_user: this.props.user.user_name,\n      submission_date: '',\n      submission_desc: ''\n    }; //set user\n\n    this.onChangeSubmissionTitle = this.onChangeSubmissionTitle.bind(this);\n    this.onChangeSubmissionDesc = this.onChangeSubmissionDesc.bind(this);\n    this.handleUploadFile = this.handleUploadFile.bind(this);\n    this.addSubToDB = this.addSubToDB.bind(this); //this.getUserFromContext = this.getUserFromContext.bind(this);\n  } // componentDidMount(){\n  //     this.getUserFromContext();\n  // }\n  //uploads submitted file to backend uploads/packs or uploads/images\n\n\n  handleUploadFile(ev) {\n    ev.preventDefault();\n    console.log(`Form submitted:`);\n    console.log(`Submission Title: ${this.state.submission_title}`);\n    console.log(`Submission Description: ${this.state.submission_desc}`);\n    const packData = new FormData();\n    const imgData = new FormData(); //get extensions of each upload - works as long as the file actually has a '.ext'\n\n    let packExt = this.packUploadInput.files[0].name.split('.').slice(-1)[0];\n    let imgExt = this.imgUploadInput.files[0].name.split('.').slice(-1)[0];\n    console.log(packExt);\n    console.log(imgExt);\n    packData.append('file', this.packUploadInput.files[0]);\n    packData.append('filename', `packs/${this.state.submission_title}.${packExt}`);\n    imgData.append('file', this.imgUploadInput.files[0]);\n    imgData.append('filename', `images/${this.state.submission_title}.${imgExt}`); //CONVERT ALL THIS CODE WITH ASYNC/AWAIT\n\n    console.log(\"fetching upload path\"); //upload sample pack\n\n    fetch(`http://localhost:${BACK_PORT}/upload`, {\n      method: 'POST',\n      body: packData\n    }).then(response => {\n      response.json().then(body => {\n        this.setState({ ...this.state,\n          didUpload: true,\n          //may not need this\n          //submission_pack_url: `http://localhost:${BACK_PORT}/${body.file}`,\n          submission_pack_url: `${body.file}`,\n          submission_img_url: 'default',\n          submission_date: Date.now()\n        });\n      });\n    }) //upload image\n    .then(() => fetch(`http://localhost:${BACK_PORT}/upload`, {\n      method: 'POST',\n      body: imgData\n    }).then(response => {\n      response.json().then(body => {\n        this.setState({\n          //...this.state,\n          //submission_img_url: `http://localhost:${BACK_PORT}/${body.file}`\n          submission_img_url: `${body.file}`\n        }); //submit to db\n\n        this.addSubToDB();\n      });\n    }));\n  } //submit to db, reset state, redirect to home\n\n\n  addSubToDB() {\n    const newSubmission = {\n      submission_pack_url: this.state.submission_pack_url,\n      submission_img_url: this.state.submission_img_url,\n      submission_title: this.state.submission_title,\n      submission_user: this.state.submission_user,\n      submission_date: this.state.submission_date,\n      submission_desc: this.state.submission_desc\n    };\n    console.log(newSubmission);\n    axios.post(`http://localhost:${BACK_PORT}/molten/submissions/add`, newSubmission).then(res => {\n      //AFTER DB UPLOAD\n      console.log(res.data);\n      this.setState({\n        didUpload: false,\n        submission_pack_url: '',\n        submission_img_url: '',\n        submission_title: '',\n        submission_user: '',\n        submission_date: '',\n        submission_desc: ''\n      });\n      this.props.history.push(\"/\");\n    });\n  } // getUserFromContext(){\n  //     return(\n  //         <userContext.Consumer>\n  //             {ctx=> (\n  //                 this.setState({submission_user: ctx.user.user_name})\n  //             )}\n  //         </userContext.Consumer>\n  //     )\n  // }\n\n\n  onChangeSubmissionTitle(e) {\n    this.setState({\n      submission_title: e.target.value\n    });\n  }\n\n  onChangeSubmissionDesc(e) {\n    this.setState({\n      submission_desc: e.target.value\n    });\n  }\n\n  render() {\n    //this.getUserFromContext();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, \" Submit \"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleUploadFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"Sample Pack File\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: ref => {\n        this.packUploadInput = ref;\n      },\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, \"Image File\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: ref => {\n        this.imgUploadInput = ref;\n      },\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.submission_title,\n      onChange: this.onChangeSubmissionTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.submission_desc,\n      onChange: this.onChangeSubmissionDesc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/harpe/Documents/molten-sample-imprint/frontend/src/components/submitPage.component.js"],"names":["React","Component","axios","userContext","FileType","require","BACK_PORT","SubmitPage","constructor","props","state","didUpload","submission_pack_url","submission_img_url","submission_title","submission_user","user","user_name","submission_date","submission_desc","onChangeSubmissionTitle","bind","onChangeSubmissionDesc","handleUploadFile","addSubToDB","ev","preventDefault","console","log","packData","FormData","imgData","packExt","packUploadInput","files","name","split","slice","imgExt","imgUploadInput","append","fetch","method","body","then","response","json","setState","file","Date","now","newSubmission","post","res","data","history","push","e","target","value","render","ref"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {userContext} from \"../userContext.js\";\r\n\r\nconst FileType = require('file-type');\r\nconst BACK_PORT = 4000;\r\n\r\nexport default class SubmitPage extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            didUpload: false,\r\n            submission_pack_url: '',\r\n            submission_img_url: '',\r\n            submission_title: '',\r\n            submission_user: this.props.user.user_name,\r\n            submission_date: '',\r\n            submission_desc: '',\r\n        };\r\n\r\n\r\n\r\n        //set user\r\n\r\n        this.onChangeSubmissionTitle = this.onChangeSubmissionTitle.bind(this);\r\n        this.onChangeSubmissionDesc = this.onChangeSubmissionDesc.bind(this);\r\n        this.handleUploadFile = this.handleUploadFile.bind(this);\r\n        this.addSubToDB = this.addSubToDB.bind(this);\r\n        //this.getUserFromContext = this.getUserFromContext.bind(this);\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     this.getUserFromContext();\r\n    // }\r\n\r\n    //uploads submitted file to backend uploads/packs or uploads/images\r\n    handleUploadFile(ev) { \r\n        ev.preventDefault();\r\n\r\n        console.log(`Form submitted:`);\r\n        console.log(`Submission Title: ${this.state.submission_title}`);\r\n        console.log(`Submission Description: ${this.state.submission_desc}`);\r\n\r\n        const packData = new FormData();\r\n        const imgData = new FormData();\r\n\r\n\r\n        //get extensions of each upload - works as long as the file actually has a '.ext'\r\n        let packExt = this.packUploadInput.files[0].name.split('.').slice(-1)[0];\r\n        let imgExt = this.imgUploadInput.files[0].name.split('.').slice(-1)[0];\r\n\r\n        console.log(packExt);\r\n        console.log(imgExt);\r\n        \r\n\r\n        packData.append('file', this.packUploadInput.files[0]);\r\n        packData.append('filename', `packs/${this.state.submission_title}.${packExt}`);\r\n        imgData.append('file',this.imgUploadInput.files[0]);\r\n        imgData.append('filename', `images/${this.state.submission_title}.${imgExt}`);\r\n\r\n\r\n        //CONVERT ALL THIS CODE WITH ASYNC/AWAIT\r\n\r\n        console.log(\"fetching upload path\");\r\n        //upload sample pack\r\n        fetch(`http://localhost:${BACK_PORT}/upload`, { \r\n            method: 'POST',\r\n            body: packData,\r\n        }).then((response) => {\r\n            response.json().then((body) => {\r\n                this.setState({ ...this.state,\r\n                                didUpload: true, //may not need this\r\n                                //submission_pack_url: `http://localhost:${BACK_PORT}/${body.file}`,\r\n                                submission_pack_url: `${body.file}`,\r\n                                submission_img_url: 'default',\r\n                                submission_date: Date.now()\r\n                            });\r\n            });\r\n        }) //upload image\r\n        .then(() => fetch(`http://localhost:${BACK_PORT}/upload`, { \r\n            method: 'POST',\r\n            body: imgData,\r\n        }).then((response) => {\r\n            response.json().then((body) => {\r\n                this.setState({ \r\n                    //...this.state,\r\n                    //submission_img_url: `http://localhost:${BACK_PORT}/${body.file}`\r\n                    submission_img_url: `${body.file}`\r\n                });\r\n                //submit to db\r\n                this.addSubToDB(); \r\n            });\r\n        }))\r\n\r\n    }\r\n\r\n    //submit to db, reset state, redirect to home\r\n    addSubToDB(){\r\n        const newSubmission = {\r\n            submission_pack_url: this.state.submission_pack_url,\r\n            submission_img_url: this.state.submission_img_url,\r\n            submission_title: this.state.submission_title,\r\n            submission_user: this.state.submission_user,\r\n            submission_date: this.state.submission_date,\r\n            submission_desc: this.state.submission_desc\r\n        }\r\n\r\n        console.log(newSubmission);\r\n\r\n        axios.post(`http://localhost:${BACK_PORT}/molten/submissions/add`,newSubmission)\r\n            .then((res)=>{\r\n                //AFTER DB UPLOAD\r\n                console.log(res.data)\r\n                this.setState({\r\n                    didUpload: false,\r\n                    submission_pack_url: '',\r\n                    submission_img_url: '',\r\n                    submission_title: '',\r\n                    submission_user: '',\r\n                    submission_date: '',\r\n                    submission_desc: '',\r\n                })\r\n                this.props.history.push(\"/\");\r\n            \r\n            });\r\n    }\r\n\r\n    // getUserFromContext(){\r\n    //     return(\r\n    //         <userContext.Consumer>\r\n    //             {ctx=> (\r\n    //                 this.setState({submission_user: ctx.user.user_name})\r\n    //             )}\r\n    //         </userContext.Consumer>\r\n    //     )\r\n    // }\r\n\r\n    onChangeSubmissionTitle(e){\r\n        this.setState({\r\n            submission_title: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeSubmissionDesc(e){\r\n        this.setState({\r\n            submission_desc: e.target.value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        //this.getUserFromContext();\r\n        return (\r\n            <div>\r\n                <h1> Submit </h1>\r\n                <form onSubmit={this.handleUploadFile}>\r\n                    <label>Sample Pack File</label>\r\n                    <div className=\"form-group\">\r\n                        <input ref={(ref) => {this.packUploadInput = ref;}} type=\"file\" />\r\n                    </div>\r\n\r\n                    <label>Image File</label>\r\n                    <div className=\"form-group\">\r\n                        <input ref={(ref) => {this.imgUploadInput = ref;}} type=\"file\" />\r\n                    </div>\r\n\r\n                    <label>Title</label>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.submission_title}\r\n                                onChange={this.onChangeSubmissionTitle}></input>\r\n                    </div>\r\n\r\n                    <label>Description</label>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.submission_desc}\r\n                                onChange={this.onChangeSubmissionDesc}></input>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\"></input>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}