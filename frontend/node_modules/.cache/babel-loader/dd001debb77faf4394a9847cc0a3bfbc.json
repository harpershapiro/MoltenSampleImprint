{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harpe\\\\Documents\\\\molten-sample-imprint\\\\frontend\\\\src\\\\components\\\\authform.component.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"; //Maybe convert to a shared form\n//this.props.backmethod to \n//this.props.onsucess to choose between login method or signup method\n//this.props.type to choose between form displays\n\nexport default class AuthForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      type: this.props.type\n    }; //this.toggleMode = this.toggleMode.bind(this);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleMode() {\n    if (this.state.type === 'login') {\n      this.setState({\n        type: 'signup'\n      });\n    } else {\n      this.setState({\n        type: 'login'\n      });\n    }\n\n    console.log(`login: ${this.state.login}`);\n  } // loginForm(){\n  //     return(\n  //     <div>\n  //         <h1>LOGIN</h1>\n  //         <button onClick={this.toggleMode}>Sign Up</button>\n  //     </div>\n  //     )\n  // }\n  // signupForm(){\n  //     return(\n  //         <div>\n  //             <h1>SIGNUP</h1>\n  //             <form>\n  //             </form>\n  //             <button onClick={this.toggleMode}>Login</button>\n  //         </div>\n  //     )\n  // }\n\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  handleSubmit(ev) {\n    //api will handle hashing\n    ev.preventDefault(); //VERSION FOR DB\n    // const newSignup= {\n    //     username: this.state.username,\n    //     password: this.state.password,\n    // }\n    //VERSION FOR TEST\n\n    const newSignup = {\n      user_name: this.state.username,\n      //user_pass: this.state.password,\n      user_roles: ['user']\n    }; //TODO: Post to /users/sign-up\n\n    console.log(\"about to login user\");\n    this.props.loginUser(newSignup);\n    this.props.history.push('/'); //need to be async??\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      className: \"mb-1 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      onChange: this.onChangeUsername,\n      value: this.state.username,\n      className: \"form-control rounded-0\",\n      required: true,\n      minLength: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      className: \"mb-1 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      id: \"password\",\n      onChange: this.onChangePassword,\n      value: this.state.password,\n      className: \"form-control rounded-0\",\n      required: true,\n      minLength: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: this.state.type === 'signup' ? \"Sign Up\" : \"Login\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    })), this.state.type === 'login' && /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 51\n      }\n    }, \"(Sign Up)\"), this.state.type === 'signup' && /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 52\n      }\n    }, \"(Login)\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/harpe/Documents/molten-sample-imprint/frontend/src/components/authform.component.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","AuthForm","constructor","props","state","username","password","type","onChangeUsername","bind","onChangePassword","handleSubmit","toggleMode","setState","console","log","login","e","target","value","ev","preventDefault","newSignup","user_name","user_roles","loginUser","history","push","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n//Maybe convert to a shared form\r\n//this.props.backmethod to \r\n//this.props.onsucess to choose between login method or signup method\r\n//this.props.type to choose between form displays\r\n\r\nexport default class AuthForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n         this.state = {\r\n            username: '',\r\n            password: '',\r\n            type: this.props.type\r\n        }\r\n\r\n        //this.toggleMode = this.toggleMode.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\r\n\r\n    }\r\n\r\n    toggleMode(){\r\n        if(this.state.type==='login'){\r\n            this.setState({\r\n                type: 'signup'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                type: 'login'\r\n            })\r\n        }\r\n        console.log(`login: ${this.state.login}`)\r\n    }\r\n\r\n    // loginForm(){\r\n    //     return(\r\n    //     <div>\r\n    //         <h1>LOGIN</h1>\r\n    //         <button onClick={this.toggleMode}>Sign Up</button>\r\n    //     </div>\r\n    //     )\r\n    // }\r\n\r\n    // signupForm(){\r\n    //     return(\r\n    //         <div>\r\n    //             <h1>SIGNUP</h1>\r\n    //             <form>\r\n\r\n\r\n    //             </form>\r\n    //             <button onClick={this.toggleMode}>Login</button>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    onChangePassword(e){\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeUsername(e){\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(ev){\r\n        //api will handle hashing\r\n        ev.preventDefault();\r\n        //VERSION FOR DB\r\n        // const newSignup= {\r\n        //     username: this.state.username,\r\n        //     password: this.state.password,\r\n        // }\r\n        //VERSION FOR TEST\r\n        const newSignup= {\r\n            user_name: this.state.username,\r\n            //user_pass: this.state.password,\r\n            user_roles: ['user']\r\n        }\r\n\r\n        //TODO: Post to /users/sign-up\r\n        console.log(\"about to login user\");\r\n        this.props.loginUser(newSignup);\r\n        this.props.history.push('/'); //need to be async??\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Router>\r\n            <div>\r\n                <form onSubmit = {this.handleSubmit}>\r\n                    <div className = \"form-group\">\r\n                        <label htmlFor=\"username\" className=\"mb-1 text-muted\">\r\n                                Username\r\n                        </label>\r\n                        <input  type=\"text\" \r\n                                name=\"username\" \r\n                                id=\"username\" \r\n                                onChange={this.onChangeUsername}\r\n                                value={this.state.username} \r\n                                className=\"form-control rounded-0\" \r\n                                required minLength=\"5\" />\r\n                        \r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label htmlFor=\"password\" className=\"mb-1 text-muted\">\r\n                                Password\r\n                        </label>\r\n                        <input  type=\"text\" \r\n                                name=\"password\" \r\n                                id=\"password\" \r\n                                onChange={this.onChangePassword}\r\n                                value={this.state.password} \r\n                                className=\"form-control rounded-0\" \r\n                                required minLength=\"5\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value={this.state.type === 'signup' ? \"Sign Up\" : \"Login\"} className=\"btn btn-primary\"></input>\r\n                    </div>\r\n\t\t\t\t\t\r\n                    {this.state.type==='login' && <Link to='/signup'>(Sign Up)</Link>}\r\n                    {this.state.type==='signup' && <Link to=\"/login\">(Login)</Link>}\r\n\r\n\t\t\t\t\t\t\t\r\n                        \r\n                </form>\r\n            </div>\r\n            </Router>\r\n        )\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}