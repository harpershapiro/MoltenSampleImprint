{"ast":null,"code":"const fs = require('fs');\n\nconst Path = require('path');\n\nconst axios = require('axios');\n\nconst {\n  stream\n} = require('file-type');\n\nasync function download() {\n  const url = 'https://upload.wikimedia.org/wikipedia/commons/6/6a/Scotese_260_ma.png';\n  const path = Path.resolve(__dirname, \"./images\", \"permian.png\");\n  const response = await axios({\n    method: 'GET',\n    url: url,\n    responseType: 'stream'\n  });\n  response.data.pipe(fs.createWriteStream(path));\n  return new Promise((resolve, reject) => {\n    response.data.on('end', () => {\n      resolve();\n    });\n    response.data.on('error', err => {\n      reject(err);\n    });\n  });\n}\n\nexport default download;","map":{"version":3,"sources":["C:/Users/harpe/Documents/molten-sample-imprint/frontend/src/download.js"],"names":["fs","require","Path","axios","stream","download","url","path","resolve","__dirname","response","method","responseType","data","pipe","createWriteStream","Promise","reject","on","err"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAaH,OAAO,CAAC,WAAD,CAA1B;;AAEA,eAAeI,QAAf,GAAyB;AAErB,QAAMC,GAAG,GAAC,wEAAV;AACA,QAAMC,IAAI,GAAGL,IAAI,CAACM,OAAL,CAAaC,SAAb,EAAuB,UAAvB,EAAkC,aAAlC,CAAb;AAEA,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAAC;AACzBQ,IAAAA,MAAM,EAAE,KADiB;AAEzBL,IAAAA,GAAG,EAAEA,GAFoB;AAGzBM,IAAAA,YAAY,EAAE;AAHW,GAAD,CAA5B;AAMAF,EAAAA,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBd,EAAE,CAACe,iBAAH,CAAqBR,IAArB,CAAnB;AAEA,SAAO,IAAIS,OAAJ,CAAY,CAACR,OAAD,EAASS,MAAT,KAAkB;AACjCP,IAAAA,QAAQ,CAACG,IAAT,CAAcK,EAAd,CAAiB,KAAjB,EAAwB,MAAI;AACxBV,MAAAA,OAAO;AACV,KAFD;AAIAE,IAAAA,QAAQ,CAACG,IAAT,CAAcK,EAAd,CAAiB,OAAjB,EAA2BC,GAAD,IAAO;AAC7BF,MAAAA,MAAM,CAACE,GAAD,CAAN;AACH,KAFD;AAGH,GARM,CAAP;AASH;;AAED,eAAed,QAAf","sourcesContent":["const fs = require('fs');\r\nconst Path = require('path');\r\nconst axios = require('axios');\r\nconst { stream } = require('file-type');\r\n\r\nasync function download(){\r\n\r\n    const url='https://upload.wikimedia.org/wikipedia/commons/6/6a/Scotese_260_ma.png'\r\n    const path = Path.resolve(__dirname,\"./images\",\"permian.png\");\r\n\r\n    const response = await axios({\r\n        method: 'GET',\r\n        url: url,\r\n        responseType: 'stream'\r\n    })\r\n\r\n    response.data.pipe(fs.createWriteStream(path));\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        response.data.on('end', ()=>{\r\n            resolve();\r\n        })\r\n\r\n        response.data.on('error', (err)=>{\r\n            reject(err);\r\n        })\r\n    })\r\n}\r\n\r\nexport default download;\r\n\r\n"]},"metadata":{},"sourceType":"module"}